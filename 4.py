#@程
from manim import *

class thePythagoreantheorem(Scene):
    def construct(self):
        #标题
        Title=Text("The Pythagorean theorem（毕达哥拉斯定理）",
                   font_size=36).to_edge(UP)
        self.play(Write(Title))
        #创建三边
        line_b=Line(np.array([-2.5,-2,0]),
                    np.array([2.5,-2,0])).set_color(WHITE)
        line_a=Line(np.array([-2.5,-2,0]),
                    np.array([-2.5,1,0])).set_color(WHITE)
        line_c=Line(line_a.get_end(),
                    line_b.get_end()).set_color(WHITE)
        self.play(Write(line_a),
                  run_time=0.5)
        self.play(Write(line_b),
                  run_time=0.5)
        self.play(Write(line_c),
                  run_time=0.5)        
        #创建直角符号
        right_angle=RightAngle(line_a,line_b).set_color(WHITE)
        self.play(Write(right_angle),
                  run_time=0.5)
        #创建文字
        text1=Text("a",font_size=36).next_to(line_a,LEFT)
        text2=Text("b",font_size=36).next_to(line_b,DOWN)
        text3=Text("c",
                   font_size=36).next_to(line_a,
                                         RIGHT*12).next_to(line_b,
                                                           UP*8)
        self.play(Write(text1),
                  run_time=0.5)
        self.play(Write(text2),
                  run_time=0.5)
        self.play(Write(text3),
                  run_time=0.5)
        #构建组1
        group1=VGroup(line_a,line_b,
                      line_c,right_angle,
                      text1,text2,text3).set_color(WHITE)
        self.play(group1.animate.scale(0.5))
        #创建三边的外接正方形
        #边c
        line_c1=Line(line_a.get_end(),
                     line_b.get_end()).set_color(WHITE)
        self.add(line_c1)
        self.play(Rotate(line_c1,angle=PI/2,
                         about_point=line_a.get_end(),
                         run_time=0.5))
        line_c2=Line(line_a.get_end(),
                     line_b.get_end()).set_color(WHITE)
        self.add(line_c2)
        self.play(Rotate(line_c2,
                         angle=-PI/2,
                         about_point=line_b.get_end(),
                         run_time=0.5))
        line_c3=Line(line_c.get_end(),
                     line_c2.get_start()).set_color(WHITE)
        self.add(line_c3)
        self.play(Rotate(line_c3,
                         angle=-PI/2,
                         about_point=line_c2.get_start(),
                         run_time=0.5))
        #边a
        line_a1=Line(line_a.get_start(),
                     line_a.get_end()).set_color(WHITE)
        self.add(line_a1)
        self.play(Rotate(line_a1,
                         angle=PI/2,
                         about_point=line_a.get_start(),
                         run_time=0.5))
        line_a2=Line(line_a.get_start(),
                     line_a.get_end()).set_color(WHITE)
        self.add(line_a2)
        self.play(Rotate(line_a2,
                         angle=-PI/2,
                         about_point=line_a.get_end(),
                         run_time=0.5))
        line_a3=Line(line_a.get_end(),
                     line_a2.get_start()).set_color(WHITE)
        self.add(line_a3)
        self.play(Rotate(line_a3,
                         angle=-PI/2,
                         about_point=line_a2.get_start(),
                         run_time=0.5))
        #边b
        line_b1=Line(line_b.get_start(),
                     line_b.get_end()).set_color(WHITE)
        self.add(line_b1)
        self.play(Rotate(line_b1,
                         angle=-PI/2,
                         about_point=line_b.get_start(),
                         run_time=0.5))
        line_b2=Line(line_b.get_start(),
                     line_b.get_end()).set_color(WHITE)
        self.add(line_b2)
        self.play(Rotate(line_b2,
                         angle=PI/2,
                         about_point=line_b.get_end(),
                         run_time=0.5))
        line_b3=Line(line_b.get_start(),
                     line_b1.get_end()).set_color(WHITE)
        self.add(line_b3)
        self.play(Rotate(line_b3,
                         angle=-PI/2,
                         about_point=line_b1.get_end(),
                         run_time=0.5))
        #构建正方形
        w1=Polygon(line_a.get_start(),
                   line_a.get_end(),
                   line_a2.get_start(),
                   line_a1.get_end(),
                   line_a.get_start(),
                     color=BLUE,
                     fill_color=BLUE,
                     fill_opacity=0.5,
                   )
        w2=Polygon(line_b.get_start(),
                   line_b.get_end(),
                   line_b2.get_start(),
                   line_b1.get_end(),
                   line_b.get_start(),
                     color=ORANGE,
                     fill_color=ORANGE,
                     fill_opacity=0.5,
                   )
        w3=Polygon(line_c.get_start(),
                   line_c.get_end(),
                   line_c2.get_start(),
                   line_c1.get_end(),
                   line_c.get_start(),
                     color=GREEN,
                     fill_color=GREEN,
                     fill_opacity=0.5
                     )
        self.add(w1,w2,w3)
        self.play(Write(w1),
                  Write(w2),
                  Write(w3),
                  run_time=0.5)
        self.wait(0.5)
        #创建文本
        text4=Text("a²",
                   font_size=25).next_to(line_a,
                                         LEFT*2)
        text5=Text("b²",
                   font_size=25).next_to(line_b,
                                         DOWN*4.5)
        text6=Text("c²",
                   font_size=25).next_to(line_a,
                                         RIGHT*7.5+UP*2)
        self.play(Write(text4),
                  Write(text5),
                  Write(text6),
                  run_time=0.5)
        #提出问题
        group_a=VGroup(line_a,line_a1,
                       line_a2,line_a3,
                       text4,w1)
        group_b=VGroup(line_b,line_b1,
                       line_b2,line_b3,
                       text5,w2)
        group_c=VGroup(line_c,line_c1,
                       line_c2,line_c3,
                       text6,w3)
        text_queation=Text("How?",
                           font_size=36,
                           color=BLUE).to_edge(DOWN)
        tex_question_1=Tex("$+  $").to_edge(LEFT*7.1+DOWN*6.3)
        tex_question_2=Tex("$= $").to_edge(RIGHT*11+DOWN*6.3)
        self.play(FadeOut(text1,text2,text3,
                          right_angle),
                  group_a.animate.shift(LEFT*3),
                  group_b.animate.shift(UP*2+LEFT),
                  group_c.animate.shift(RIGHT*4+DOWN*1.5),
                  Write(text_queation,run_time=0.5),
                  Write(tex_question_1),
                  Write(tex_question_2),
                  )
        self.wait(1.5)
        #消失
        self.play(FadeOut(group_a,
                          group_b,
                          group_c,
                          text_queation,
                          tex_question_1,
                          tex_question_2,
                          Title),
                          run_time=1
                          )
        #证明过程标题
        text_answer_title=Text("证明过程:",
                               color=WHITE,
                               font_size=40).to_edge(UP+LEFT)
        self.play(Write(text_answer_title),
                  run_time=0.5)
        #过程
        #构建新三角形
        line_newa=Line(np.array([0,0,0]),
                       np.array([9/5,12/5,0])).set_color(WHITE)
        line_newb=Line(np.array([5,0,0]),
                       np.array([9/5,12/5,0])).set_color(WHITE)
        line_newc=Line(np.array([0,0,0]),
                       np.array([5,0,0])).set_color(WHITE)
        #创建直角符号
        new_rightangle=RightAngle(line_newb,
                                  line_newa,
                                  length=0.5,
                                  quadrant=(-1,-1)).set_color(WHITE)
        #创建标识
        text_A=Text("A",
                    font_size=36).next_to(line_newa.get_start(),
                                          LEFT)
        text_B=Text("B",
                    font_size=36).next_to(line_newb.get_end(),
                                          UP)
        text_C=Text("C",
                    font_size=36).next_to(line_newc.get_end(),
                                          RIGHT)
        #出现
        group_new_answer=VGroup(line_newa,
                                line_newb,
                                line_newc,
                                new_rightangle,
                                text_A,
                                text_B,
                                text_C
                                ).set_color(WHITE).move_to(ORIGIN)
        self.play(Write(line_newa),
                  Write(line_newb),
                  Write(line_newc),
                  Write(new_rightangle),
                  Write(text_A),
                  Write(text_B),
                  Write(text_C),
                  run_time=0.2
                  )
        self.play(group_new_answer.animate.scale(0.5))
        #构建外接正方形
        #边c
        line_newc1=Line(line_newa.get_start(),
                        line_newb.get_start()).set_color(WHITE)
        self.add(line_newc1)
        self.play(Rotate(line_newc1,
                         angle=-PI/2,
                         about_point=line_newa.get_start(),
                         run_time=0.2))
        line_newc2=Line(line_newb.get_start(),
                        line_newa.get_start()).set_color(WHITE)
        self.add(line_newc2)
        self.play(Rotate(line_newc2,
                         angle=PI/2,
                         about_point=line_newb.get_start(),
                         run_time=0.2))
        line_newc3=Line(line_newc.get_end(),
                        line_newc2.get_end()).set_color(WHITE)
        self.add(line_newc3)
        self.play(Rotate(line_newc3,
                         angle=PI/2,
                         about_point=line_newc2.get_end(),
                         run_time=0.2))
        #边a
        line_newa1=Line(line_newa.get_start(),
                        line_newa.get_end()).set_color(WHITE)
        self.add(line_newa1)
        self.play(Rotate(line_newa1,
                         angle=PI/2,
                         about_point=line_newa.get_start(),
                         run_time=0.2))
        line_newa2=Line(line_newa.get_start(),
                        line_newa.get_end()).set_color(WHITE)
        self.add(line_newa2)
        self.play(Rotate(line_newa2,
                         angle=-PI/2,
                         about_point=line_newa.get_end(),
                         run_time=0.2))
        line_newa3=Line(line_newa.get_end(),
                        line_newa2.get_start()).set_color(WHITE)
        self.add(line_newa3)
        self.play(Rotate(line_newa3,
                         angle=-PI/2,
                         about_point=line_newa2.get_start(),
                         run_time=0.2))
        #边b
        line_newb1=Line(line_newb.get_start(),
                        line_newb.get_end()).set_color(WHITE)
        self.add(line_newb1)
        self.play(Rotate(line_newb1,
                         angle=-PI/2,
                         about_point=line_newb.get_start(),
                         run_time=0.2))
        line_newb2=Line(line_newb.get_start(),
                        line_newb.get_end()).set_color(WHITE)
        self.add(line_newb2)
        self.play(Rotate(line_newb2,
                         angle=PI/2,
                         about_point=line_newb.get_end(),
                         run_time=0.2))
        line_newb3=Line(line_newb.get_start(),
                        line_newb1.get_end()).set_color(WHITE)
        self.add(line_newb3)
        self.play(Rotate(line_newb3,
                         angle=-PI/2,
                         about_point=line_newb1.get_end(),
                         run_time=0.2))
        #构建正方形
        w4=Polygon(line_newa.get_start(),
                   line_newa.get_end(),
                   line_newa2.get_start(),
                   line_newa1.get_end(),
                   line_newa.get_start(),
                   color=WHITE)
        w5=Polygon(line_newb.get_start(),
                   line_newb.get_end(),
                   line_newb2.get_start(),
                   line_newb1.get_end(),
                   line_newb.get_start(),
                   color=WHITE)
        w6=Polygon(line_newc.get_start(),
                   line_newc.get_end(),
                   line_newc2.get_end(),
                   line_newc1.get_end(),
                   line_newc.get_start(),
                   color=WHITE)
        #标点
        dot_A_D=Dot(line_newa1.get_end())
        text_A_D=Text("D",font_size=18).next_to(dot_A_D,
                                                ORIGIN+LEFT)
        dot_A_E=Dot(line_newa2.get_start())
        text_A_E=Text("E",font_size=18).next_to(dot_A_E,
                                                ORIGIN+UP)
        dot_B_F=Dot(line_newb2.get_start())
        text_B_F=Text("F",font_size=18).next_to(dot_B_F,
                                                ORIGIN+UP)
        dot_B_G=Dot(line_newb1.get_end())
        text_B_G=Text("G",font_size=18).next_to(dot_B_G,
                                                ORIGIN+RIGHT)
        dot_C_H=Dot(line_newc1.get_end())
        text_C_H=Text("H",font_size=18).next_to(dot_C_H,
                                                ORIGIN+LEFT+DOWN)
        dot_C_I=Dot(line_newc2.get_end())
        text_C_I=Text("I",font_size=18).next_to(dot_C_I,
                                                ORIGIN+RIGHT+DOWN)
        self.play(Write(text_A_D),
                  Write(text_A_E),
                  Write(text_B_F),
                  Write(text_B_G),
                  Write(text_C_H),
                  Write(text_C_I),
                  run_time=0.5)
        #创建文本
        text7=Text("a²",
                   font_size=25).next_to(w4,ORIGIN)
        text8=Text("b²",
                   font_size=25).next_to(w5,ORIGIN)
        text9=Text("c²",
                   font_size=25).next_to(w6,ORIGIN)
        self.play(Write(text7),
                  Write(text8),
                  Write(text9),
                  run_time=0.5)
        #移位
        group_allP=VGroup(group_new_answer,
                          line_newa1,
                          line_newa2,
                          line_newa3,
                          line_newb1,
                          line_newb2,
                          line_newb3,
                          line_newc1,
                          line_newc2,
                          line_newc3,
                          w4,w5,w6,
                          text_A_D,text_A_E,
                          text_B_F,text_B_G,
                          text_C_H,text_C_I,
                          text7,text8,text9)
        self.play(group_allP.animate.shift(LEFT*3),
                  run_time=0.5)
        #创建垂线
        dot_O=Dot(line_newc3.point_from_proportion(0.36))
        line_vertical=Line(line_newa.get_end(),
                           dot_O)
        #演示说明
        tex_tell_1=Tex(r"$\text{作出直角三角形三边的外接正方形，其面积分别为}a^2,b^2,c^2$",
                       tex_template=TexTemplateLibrary.ctex,
                       font_size=25).to_edge(RIGHT)
        tex_q1=Tex(r"$\text{作} BD\bot HI\text{于点} O , \text{交} AC \text{于点} P$",
                   tex_template=TexTemplateLibrary.ctex,
                   font_size=35).to_edge(RIGHT*3)
        text_doto=Text("O",
                       font_size=18).next_to(dot_O,
                                             ORIGIN+DOWN)
        self.play(Write(tex_tell_1),
                  run_time=1)
        self.wait(2)
        self.play(FadeOut(tex_tell_1,run_time=0.2))
        self.play(Write(tex_q1),run_time=0.5)
        self.wait(0.3)
        self.play(Write(line_vertical),
                  run_time=0.5)
        self.play(Write(dot_O),
                  Write(text_doto),
                  run_time=0.5)
        dot_P=Dot(line_newc.point_from_proportion(0.36))
        text_P=Text("P",
                    font_size=18).next_to(dot_P,
                                          ORIGIN+UP*0.5+RIGHT*0.5)
        self.play(Write(text_P),
                  Write(dot_P),
                  run_time=0.5)
        self.wait()
        tex_FadeTransform_1start=Tex(r"$\text{作} BD\bot HI\text{于点} O , \text{交} AC \text{于点} P$",
                   tex_template=TexTemplateLibrary.ctex,
                   font_size=35).to_edge(RIGHT*3)
        tex_FadeTransform_1end=Tex(r"$\text{连接}HP,IP$",
                   tex_template=TexTemplateLibrary.ctex,
                   font_size=35).to_edge(RIGHT*6+DOWN*6)
        self.play(Transform(tex_FadeTransform_1start,
                                tex_FadeTransform_1end),
                  run_time=0.5)
        line_HP=Line(line_newc1.get_end(),
                     dot_P).set_color(WHITE)
        line_IP=Line(line_newc2.get_end(),
                     dot_P).set_color(WHITE)
        self.play(Write(line_HP),
                  Write(line_IP),
                  run_time=0.5)
        self.wait(0.5)
        #变换
        dot_P_1=Dot(line_newc.point_from_proportion(0.36))
        san_Poly_1=Polygon(line_newa.get_start(),
                         dot_P_1.get_start(),
                         line_newc1.get_end(),
                         line_newa.get_start(),
                         color=BLUE,
                         fill_color=BLUE,
                         fill_opacity=0.5)
        tex_FadeTransform_2end=Tex(r"$\because \text{三角形等底同高面积不变} $",
                                   tex_template=TexTemplateLibrary.ctex,
                                   font_size=35).to_edge(RIGHT*3)
        tex_FadeTransform_3end=Tex(r"$\therefore \text{易得} \triangle AHP= \triangle AHB$",
                                   tex_template=TexTemplateLibrary.ctex,
                                    font_size=35).next_to(tex_FadeTransform_2end,DOWN*3)
        tex_FadeTransform_4end=Tex(r"$\text{将} \triangle AHP \text{以点} A \text{为圆心逆时针旋转} 90^\text{。} $",
                                   tex_template=TexTemplateLibrary.ctex,
                                    font_size=35).to_edge(RIGHT*2)
        self.remove(tex_FadeTransform_1start)
        self.play(Transform(tex_q1,
                            tex_FadeTransform_2end),
                            run_time=1)
        self.wait()
        self.play(Transform(tex_FadeTransform_1end,
                            tex_FadeTransform_3end),
                  run_time=0.5)
        self.wait(0.5)
        self.add(san_Poly_1)
        self.play(Write(san_Poly_1,
                        run_time=0.5))
        self.wait(1)
        san_Poly_1_1=Polygon(line_newa.get_start(),
                           line_newa.get_end(),
                           line_newc1.get_end(),
                           line_newa.get_start(),
                           color=BLUE,
                           fill_color=BLUE,
                           fill_opacity=0.5)
        self.play(Transform(san_Poly_1,
                           san_Poly_1_1),
                  run_time=1.5)
        self.wait(2)
        self.play(FadeOut(tex_q1,
                          tex_FadeTransform_1end,
                          tex_FadeTransform_2end,
                          tex_FadeTransform_2end),
                  run_time=0.5)
        self.play(Write(tex_FadeTransform_4end,
                        run_time=1))
        self.remove(san_Poly_1)
        self.play(Rotate(san_Poly_1_1,
                         angle=PI/2,
                         about_point=line_newa.get_start()),
                         run_time=1)
        self.wait(2)
        san_Poly_1_2=Polygon(line_newa.get_start(),
                             line_newa1.get_end(),
                             line_newa2.get_start(),
                             line_newa.get_start(),
                             color=BLUE,
                             fill_color=BLUE,
                             fill_opacity=0.5)
        tex_FadeTransform_5end=Tex(r"$\text{又可得} \triangle ACD= \triangle ADE$",
                                   tex_template=TexTemplateLibrary.ctex,
                                    font_size=35).to_edge(RIGHT*3)
        self.play(Transform(tex_FadeTransform_4end,
                            tex_FadeTransform_5end),
                  run_time=1)
        self.wait()
        self.play(Transform(san_Poly_1_1,
                            san_Poly_1_2),
                            run_time=1.5)
        san_Poly_2=Polygon(line_newc.point_from_proportion(0.36),
                           line_newc3.point_from_proportion(0.36),
                           line_newc1.get_end(),
                           line_newc.point_from_proportion(0.36),
                           color=BLUE,
                           fill_color=BLUE,
                           fill_opacity=0.5)
        tex_FadeTransform_6end=Tex(r"$\text{同理可得}\triangle HPO= \triangle ABE$",
                                   tex_template=TexTemplateLibrary.ctex,
                                    font_size=35).to_edge(RIGHT*2.2+DOWN*5)
        self.play(Write(tex_FadeTransform_6end),
                  run_time=1)
        self.wait()
        self.add(san_Poly_2)
        self.play(Write(san_Poly_2),
                  run_time=0.5)
        san_Poly_2_1=Polygon(line_newa.get_end(),
                             line_newa2.get_start(),
                             line_newa.get_start(),
                             line_newa.get_end(),
                             color=BLUE,
                             fill_color=BLUE,
                             fill_opacity=0.5)
        self.remove(san_Poly_2)
        self.play(Transform(san_Poly_2,
                            san_Poly_2_1),
                            run_time=1.5)
        self.wait(2)
        san_Poly_3=Polygon(line_newb.get_start(),
                           line_newc2.get_end(),
                           line_newc.point_from_proportion(0.36),
                           line_newb.get_start(),
                           color=ORANGE,
                           fill_color=ORANGE,
                           fill_opacity=0.5)
        tex_answer_a=Tex(r"$\text{同理可得} \Box CPOI= \Box BCGF$",
                         tex_template=TexTemplateLibrary.ctex,
                         font_size=35).to_edge(RIGHT*3)
        self.play(FadeOut(tex_FadeTransform_4end,
                          tex_FadeTransform_5end,
                          tex_FadeTransform_6end),
                  run_time=0.5)
        self.play(Write(tex_answer_a),
                  run_time=0.5)
        self.wait()
        self.add(san_Poly_3)
        self.play(Write(san_Poly_3),run_time=0.5)
        self.wait()
        san_Poly_3_1=Polygon(line_newb.get_start(),
                             line_newc2.get_end(),
                             line_newb.get_end(),
                             line_newb.get_start(),
                             color=ORANGE,
                             fill_color=ORANGE,
                             fill_opacity=0.5)
        self.play(Transform(san_Poly_3,
                            san_Poly_3_1),
                            run_time=0.5)
        self.wait(0.5)
        self.remove(san_Poly_3)
        self.play(Rotate(san_Poly_3_1,
                         angle=-PI/2,
                         about_point=line_newb.get_start()),
                         run_time=1)
        self.wait(0.5)
        san_Poly_3_2=Polygon(line_newb.get_start(),
                             line_newb2.get_start(),
                             line_newb1.get_end(),
                             line_newb.get_start(),
                             color=ORANGE,
                             fill_color=ORANGE,
                             fill_opacity=0.5)
        self.play(Transform(san_Poly_3_1,
                            san_Poly_3_2),
                            run_time=1.5)
        self.wait(2)
        san_Poly_4=Polygon(line_newc.point_from_proportion(0.36),
                           line_newc3.point_from_proportion(0.36),
                           line_newc2.get_end(),
                           line_newc.point_from_proportion(0.36),
                           color=ORANGE,
                           fill_color=ORANGE,
                           fill_opacity=0.5)
        san_Poly_4_1=Polygon(line_newb.get_start(),
                             line_newb.get_end(),
                             line_newb2.get_start(),
                             line_newb.get_start(),
                             color=ORANGE,
                             fill_color=ORANGE,
                             fill_opacity=0.5)
        self.add(san_Poly_4)
        self.play(Write(san_Poly_4),run_time=0.5)
        self.wait(0.5)
        self.remove(san_Poly_4)
        self.play(Transform(san_Poly_4,
                            san_Poly_4_1),
                            run_time=1.5)
        self.wait(2)
        #总结
        
        san_Poly_1_2_new=Polygon(line_newa.get_start(),
                             line_newa1.get_end(),
                             line_newa2.get_start(),
                             line_newa.get_start(),
                             color=BLUE,
                             fill_color=BLUE,
                             fill_opacity=0.5)
        san_Poly_2_1_new=Polygon(line_newa.get_end(),
                             line_newa2.get_start(),
                             line_newa.get_start(),
                             line_newa.get_end(),
                             color=BLUE,
                             fill_color=BLUE,
                             fill_opacity=0.5)
        san_Poly_3_2_new=Polygon(line_newb.get_start(),
                             line_newb2.get_start(),
                             line_newb1.get_end(),
                             line_newb.get_start(),
                             color=ORANGE,
                             fill_color=ORANGE,
                             fill_opacity=0.5)
        san_Poly_4_1_new=Polygon(line_newb.get_start(),
                             line_newb.get_end(),
                             line_newb2.get_start(),
                             line_newb.get_start(),
                             color=ORANGE,
                             fill_color=ORANGE,
                             fill_opacity=0.5)
        self.play(FadeOut(tex_answer_a),run_time=0.7)
        group_A2=VGroup(san_Poly_1_2_new,
                         san_Poly_2_1_new,
                         )
        group_B2=VGroup(san_Poly_3_2_new,
                         san_Poly_4_1_new,
                         )
        C2=Polygon(line_newa.get_start(),
                   line_newb.get_start(),
                   line_newc2.get_end(),
                   line_newc1.get_end(),
                   line_newa.get_start(),
                   color=GREEN,
                   fill_color=GREEN,
                   fill_opacity=0.5)
        self.add(C2)
        self.play(Write(C2),
                  run_time=1)
        self.remove(san_Poly_1_1,
                    san_Poly_2,
                    san_Poly_3_1,
                    san_Poly_4)
        self.play(group_A2.animate.scale(0.5),
                  group_B2.animate.scale(0.5),
                  C2.animate.scale(0.5),
                  run_time=0.5)
        self.play(group_A2.animate.shift(RIGHT*5),
                  group_B2.animate.shift(RIGHT*5+DOWN*0.4),
                  C2.animate.shift(RIGHT*9+UP*2.3),
                  run_time=0.5)
        text_add=Text("+",
                       font_size=36,
                       color=WHITE).to_edge(RIGHT*10.5+UP*6.99)
        text_equal=Text("=",
                        font_size=36,
                        color=WHITE).to_edge(RIGHT*5+UP*7.1)
        self.play(Write(text_add),
                  Write(text_equal),
                  run_time=0.5)
        self.wait()
        tex_a=Tex(r"$\mathit{a^{2} +  b^{2} = c^{2} }$",
                  font_size=50,
                  color=BLUE).to_edge(RIGHT*5.2+DOWN*5)
        self.play(Write(tex_a),run_time=1)
        TEX_last=Tex(r"$\mathit{a^{2} +  b^{2} = c^{2} } $",
                     font_size=100,
                     color=BLUE).move_to(ORIGIN+DOWN)
        #全部淡出得出结论
        self.play(FadeOut(group_A2,
                         group_B2,
                         C2,
                         text_add,
                         text_equal,
                         group_allP,
                         line_vertical,
                         dot_O,text_doto,
                         dot_P,text_P,
                         line_HP,line_IP,
                         text_answer_title,
                         run_time=0.5
                         )
                  )
        text_a=Text("a",font_size=18,
                    color=WHITE).move_to(line_newa.get_center()+LEFT*0.2)
        text_b=Text("b",font_size=18,
                    color=WHITE).move_to(line_newb.get_center()+UP*0.2)
        text_c=Text("c",font_size=18,
                    color=WHITE).move_to(line_newc.get_center()+LEFT*0.08+DOWN*0.2)
        group_new_last=VGroup(line_newa,
                                line_newb,
                                line_newc,
                                new_rightangle,
                                text_A,
                                text_B,
                                text_C,
                                text_a,text_b,text_c
                                ).set_color(WHITE).move_to(ORIGIN+UP)
        self.play(Transform(tex_a,
                            TEX_last,
                            run_time=3),
                  Write(group_new_last,
                        run_time=1.5))
        self.wait(2)
